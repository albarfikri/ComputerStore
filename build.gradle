// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:3.3.3"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.4.2"
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.41"
        classpath 'com.google.gms:google-services:4.3.13'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7'
    }
}

plugins {
    id 'com.android.application' version '7.1.2' apply false
    id 'com.android.library' version '7.1.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.21' apply false
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1' apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()

        def githubProperties = new Properties()
        githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
        repositories {
            maven { url "https://jitpack.io" }
            maven {
                name = "GitHubPackages"

                url = uri("https://maven.pkg.github.com/Cuberto/liquid-swipe-android")
                credentials {
                    /** Create github.properties in root project folder file with
                     ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                     ** Or set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/
                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}